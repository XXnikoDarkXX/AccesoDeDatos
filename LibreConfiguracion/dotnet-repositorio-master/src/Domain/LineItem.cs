using System;
using System.Text;

namespace Domain
{
    public class LineItem
    {
        public string ProductCode { get; }
        public string ProductName { get; }
        public decimal Price { get; }
        public int Quantity { get; }

        public LineItem(string productCode, string productName, decimal price)
        {
            ProductCode = productCode ?? throw new ArgumentNullException(nameof(productCode));
            ProductName = productName ?? throw new ArgumentNullException(nameof(productName));
            Price = price;
            Quantity = 1;
        }

        public LineItem(string productCode, string productName, decimal price, int quantity)
        {
            ProductCode = productCode ?? throw new ArgumentNullException(nameof(productCode));
            ProductName = productName ?? throw new ArgumentNullException(nameof(productName));
            Price = price;
            Quantity = quantity;
        }

        public override string ToString()
        {
            return $"{ProductCode}-{ProductName} EUR {Price} per unit x{Quantity}";
        }

        #region AutogeneratedEqualityMembers
        protected bool Equals(LineItem other)
        {
            return 
                ProductCode == other.ProductCode 
                && ProductName == other.ProductName 
                && Price == other.Price 
                && Quantity == other.Quantity;
        }

        public override bool Equals(object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((LineItem)obj);
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(ProductCode, ProductName, Price, Quantity);
        }
        #endregion
    }
}
